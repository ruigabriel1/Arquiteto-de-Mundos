# Generated by Django 5.2.6 on 2025-09-14 16:13

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SistemaJogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do sistema de jogo', max_length=50, verbose_name='Nome')),
                ('codigo', models.CharField(choices=[('dnd5e', 'D&D 5th Edition'), ('t20', 'Tormenta20'), ('unified', 'Sistema Unificado')], help_text='Código único do sistema', max_length=10, unique=True, verbose_name='Código')),
                ('versao', models.CharField(help_text='Versão do sistema (ex: 5.1, 1.0)', max_length=20, verbose_name='Versão')),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do sistema', verbose_name='Descrição')),
                ('configuracoes', models.JSONField(default=dict, help_text='Configurações específicas do sistema', verbose_name='Configurações')),
                ('ativo', models.BooleanField(default=True, help_text='Sistema disponível para uso', verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Sistema de Jogo',
                'verbose_name_plural': 'Sistemas de Jogo',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ConteudoSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('raca', 'Raça'), ('classe', 'Classe'), ('magia', 'Magia'), ('item', 'Item/Equipamento'), ('monstro', 'Monstro/Criatura'), ('pericia', 'Perícia'), ('talento', 'Talento/Feat'), ('antecedente', 'Antecedente')], help_text='Tipo do conteúdo', max_length=20, verbose_name='Tipo')),
                ('nome', models.CharField(help_text='Nome do elemento', max_length=100, verbose_name='Nome')),
                ('descricao', models.TextField(help_text='Descrição detalhada do elemento', verbose_name='Descrição')),
                ('dados_originais', models.JSONField(help_text='Dados no formato original do sistema', verbose_name='Dados Originais')),
                ('dados_convertidos', models.JSONField(default=dict, help_text='Dados convertidos para o sistema unificado', verbose_name='Dados Convertidos')),
                ('equivalencias', models.JSONField(default=dict, help_text='Mapeamentos de equivalência entre sistemas', verbose_name='Equivalências')),
                ('nivel_minimo', models.PositiveSmallIntegerField(default=1, help_text='Nível mínimo para usar este conteúdo', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Nível Mínimo')),
                ('tags', models.JSONField(default=list, help_text='Tags para categorização e busca', verbose_name='Tags')),
                ('ativo', models.BooleanField(default=True, help_text='Conteúdo disponível para uso', verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('sistema_jogo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conteudos', to='sistema_unificado.sistemajogo', verbose_name='Sistema de Jogo')),
            ],
            options={
                'verbose_name': 'Conteúdo do Sistema',
                'verbose_name_plural': 'Conteúdos dos Sistemas',
                'ordering': ['tipo', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='EquivalenciaConteudo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel_equivalencia', models.PositiveSmallIntegerField(default=100, help_text='Porcentagem de equivalência (1-100%)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Nível de Equivalência')),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre a equivalência', verbose_name='Observações')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('conteudo_destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equivalencias_como_destino', to='sistema_unificado.conteudosistema', verbose_name='Conteúdo de Destino')),
                ('conteudo_origem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equivalencias_como_origem', to='sistema_unificado.conteudosistema', verbose_name='Conteúdo de Origem')),
            ],
            options={
                'verbose_name': 'Equivalência de Conteúdo',
                'verbose_name_plural': 'Equivalências de Conteúdo',
                'unique_together': {('conteudo_origem', 'conteudo_destino')},
            },
        ),
        migrations.AddIndex(
            model_name='conteudosistema',
            index=models.Index(fields=['sistema_jogo', 'tipo'], name='sistema_uni_sistema_0da0c0_idx'),
        ),
        migrations.AddIndex(
            model_name='conteudosistema',
            index=models.Index(fields=['tipo', 'nivel_minimo'], name='sistema_uni_tipo_095564_idx'),
        ),
    ]
